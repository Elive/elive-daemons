#!/bin/bash
source /usr/lib/elive-tools/functions

main(){
    # pre {{{
    local seconds_stamp_needed seconds_stamp_now seconds_min stamp_last is_first_run added_date

    # don't run it in live mode
    if grep -qs "boot=live" /proc/cmdline ; then
        exit
    fi

    # every 28 days min
    #seconds_min="$(( 28 * 24 * 60 * 60 ))"
    seconds_min="$(( 1 * 30 ))"
    seconds_stamp_now="$(date +%s)"
    seconds_stamp_needed="$(( $seconds_stamp_now - $seconds_min ))"

    stamp_last="$HOME/.cache/$(basename $0)/suggested_last"

    if ! [[ -s "$stamp_last" ]] ; then
        mkdir -p "$( dirname "$stamp_last" )"
        echo "$seconds_stamp_now" > "$stamp_last"
        is_first_run=1
    fi

    added_date="$( cat "$stamp_last" | grep "^[[:digit:]]*$" | tail -1 )"

    # }}}

    # check if enough time passed
    if [[ "$added_date" -le "$seconds_stamp_needed" ]] || ((is_first_run)) ; then
        local message_ask_for_donation

        message_ask_for_donation="$( printf "$( eval_gettext "Are you happy with Elive? it only survives by a few donations from the users, would you do one to support this project and keep it alive making it everyday better?" )" "" )"
        # random message generator
        case "$( shuf -i 1-2 -n 1 )" in
            1)
                message_ask_for_donation="$( printf "$( eval_gettext "Are you happy with Elive? it only survives by a few donations from the users, would you do one to support this project and keep it alive making it everyday better?" )" "" )"
                ;;
            2)
                message_ask_for_donation="$( printf "$( eval_gettext "Are you happy with Elive? it only survives by a few donations from the users, would you do one to support this project and keep it alive making it everyday better?" )" "" )"
                ;;
        esac

        if zenity --question --text="$message_ask_for_donation" ; then
            /etc/alternatives/x-www-browser "http://www.elivecd.org/donate/?id=system-xdg-$(basename $0)" &
        fi

        # add a new stamp
        echo "$seconds_stamp_now" > "$stamp_last"
    fi
}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :
