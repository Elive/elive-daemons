#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
el_make_environment
. gettext.sh
TEXTDOMAIN="elive-daemons"
export TEXTDOMAIN

main(){
    # pre {{{
    guitool="zenity --window-icon=/usr/share/icons/Elive/scalable/apps/logo-elive.png"
    el_mark_state

    # }}}
    # dump the dbus address to use in other places if we need to
    if [[ -n "$DBUS_SESSION_BUS_ADDRESS" ]] ; then
        echo "$DBUS_SESSION_BUS_ADDRESS" > "$HOME/.cache/dbus-session-address-last.txt"
    fi

    # wait desktop ready
    if [[ -z "$is_terminal" ]] ; then
        sleep 20
    fi

    # get configurations
    el_config_get

    # was the shutdown forced? {{{
    #
    if [[ -e "/var/tmp/elivehealth/elive-system-shutdown-forced" ]] && grep -qsE "^(yes|user notified pre)$" "/var/tmp/elivehealth/elive-system-shutdown-forced" ; then
        local message_shutdown_warn
        message_shutdown_warn="$( printf "$( eval_gettext "You previously turned off the computer incorrectly. It is very bad for your data to force the poweroff. You should shutdown the computer from the System option in the menu. You can also try the Hibernation mode if works correctly in your computer." )" "" )"
        # warn the user
        el_notify_user "$( eval_gettext "Forced shutdown detected" )" "$message_shutdown_warn"

        # remove the verification file
        echo "user notified post" > "/var/tmp/elivehealth/elive-system-shutdown-forced"
    fi

    # }}}
    # max temperature reached? {{{
    #
    _notification_max_temperature_reached="$( cat /var/log/syslog /var/log/kern.log /var/log/syslog.1 /var/log/kern.log.1 2>/dev/null | grep "critical temperature reached.*shutting down" | sort -u | tr '\n' ' ' )"

    if [[ -n "$_notification_max_temperature_reached" ]] && [[ "$_notification_max_temperature_reached" != "$conf_notification_max_temperature_reached" ]] ; then
        zenity --warning --text="$( eval_gettext "Elive detected that your computer reached a critical temperature which forced a shutdown for its security, this is commonly caused in old computers where dust is accumulated in the fans. To solve the issue you should open the computer and clean any dust from them. Optionally you can set your CPU speed gadget to work a little slower, this can make your computer not forcing a shutdown, but it will turn your computer a bit slower." )"

        # make sure to not show again the message if we already did it
        conf_notification_max_temperature_reached="$_notification_max_temperature_reached"
        el_config_save "conf_notification_max_temperature_reached"
    fi

    # }}}
    # filesystem almost full {{{
    #
    # default values to check
    percent_max="92"
    percent_max_crit="95"

    percent="$( LC_ALL=C df -m | awk '{if ($6 == "/home") print $5}' | head -1 )"
    percent="${percent%\%}"
    # no extra /home? use /
    if [[ -z "$percent" ]] ; then
        percent="$( LC_ALL=C df -m | awk '{if ($6 == "/") print $5}' | head -1 )"
        percent="${percent%\%}"
        # root almost full, always warning
        if [[ "${percent}" -ge "$percent_max_crit" ]] ; then
            el_notify_user "$( eval_gettext "Hard disk almost full" )" "$( eval_gettext "Your root partition is almost full, we recommend to remove some unneeded software or to resize your partition to be bigger and reinstall Elive with the special options if is needed. Your computer risks to become unbootable if the disk is full." )"
        fi
    fi

    if [[ "${percent}" -ge "$percent_max" ]] ; then
        zenity --warning --text="$( eval_gettext "Your partition is almost full. We recommend you to delete old files to free up some space, your computer is in risk to be blocked if there's no more space left." )"

        if zenity --question --text="$( eval_gettext "Do you want Elive to clean some unneded and temporal files automatically now?" )" ; then
            # delete unneeded things now
            find "$HOME/.cache" -not -path "*/.cache/zsh/*" -not -path "*/.cache/elive*" -type f -delete
            find "$HOME/.thumbnails" -type f -delete

            # clean compiling caches
            ccache -c -C 2>/dev/null || true

            find -type f "$HOME/.local/share/Trash" -delete

            : > "$HOME/.xsession-errors"

            # wine apps
            #rm -rf ${DHOME}/${result}/.local/share/applications/wine
            #rm -rf ${DHOME}/${result}/.local/share/desktop-directories/wine* 2>/dev/null
            #rm -rf ${DHOME}/${result}/.wine 2>/dev/null
            sync
        fi
        percent_new="$( LC_ALL=C df -m | awk '{if ($6 == "/home") print $5}' | head -1 )"
        percent_new="${percent_new%\%}"
        if [[ -z "$percent_new" ]] ; then
            percent_new="$( LC_ALL=C df -m | awk '{if ($6 == "/") print $5}' | head -1 )"
            percent_new="${percent_new%\%}"
        fi

        local message_ask_for_scan
        message_ask_for_scan="$( printf "$( eval_gettext "Your home partition usage was %s and now is %s. Do you want to scan your files to know where the bigger usage waste belongs to?" )" "${percent}%" "${percent_new}%" )"

        if zenity --question --text="$message_ask_for_scan" ; then
            if ! el_dependencies_check "baobab" ; then
                el_dependencies_install "baobab"
            fi
            baobab "$HOME" &

            sleep 3
            zenity --info --text="$( eval_gettext "Wait that the scanning finishes to see the results. In the meantime we recommend to delete every unneeded file from your Downloads which is where most of the wasted space happens." )"
        fi
    fi


    # }}}
    # Disk health {{{
    #

    if [[ -s "/etc/elive/disks-health" ]] ; then
        source "/etc/elive/disks-health"

        # gshock reports
        if [[ "$count_gshock" -gt 0 ]] ; then
            if [[ "$count_gshock" != "$_count_gshock" ]] ; then
                el_notify_user "Elive $( eval_gettext "shacking alert" )" "$( eval_gettext "Please do not shake the computer while is running, it is very bad for your hard disk. Shocks received so far:" ) $count_gshock"

                # save to not repeat
                _count_gshock="$count_gshock"
                el_config_save "_count_gshock"
            fi
        fi

        # bad blocks reports
        if [[ "$count_sectors_reallocated" -gt 0 ]] ; then
            if [[ "$count_sectors_reallocated" != "$_count_sectors_reallocated" ]] ; then
                if [[ -z "$_count_sectors_reallocated" ]] ; then
                    _count_sectors_reallocated="0"
                fi

                local message_badblocks
                message_badblocks="$( printf "$( eval_gettext "One of your hard disks has some bad blocks. This is not exactly bad but shows a degradation in your hard disk health. The problem appears when data wants to be saved in a future bad block not yet found. This message is basically to remember you that is important to save backups of your important or personal information in order to never lose it, since your hard disk is starting to have a delicated state." )" "" )"
                local message_badblocks_counted
                message_badblocks_counted="$( printf "$( eval_gettext "Bad blocks actually registered:" )" "" )"
                local message_badblocks_counted_before
                message_badblocks_counted_before="$( printf "$( eval_gettext "Previously registered:" )" "" )"

                zenity --warning --text="$message_badblocks $message_badblocks_counted $count_sectors_reallocated $message_badblocks_counted_before $_count_sectors_reallocated"

                # save to not repeat
                _count_sectors_reallocated="$count_sectors_reallocated"
                el_config_save "_count_sectors_reallocated"
            fi
        fi

        # bad blocks reports
        if [[ "$count_sectors_pending" -gt 0 ]] ; then
            if [[ "$count_sectors_pending" != "$_count_sectors_pending" ]] ; then
                if [[ -z "$_count_sectors_pending" ]] ; then
                    _count_sectors_pending="0"
                fi

                local message_badblocks_pending
                message_badblocks_pending="$( printf "$( eval_gettext "Bad blocks pending to reallocate has been found in one of your hard disks. This means that some data are stored on it and cannot be recovered yet, if this data is from your operating system you can experience a crash in a random application, if belongs to any of your personal or important data then you could have lost it. Because of this, we recommend to backup all your important files and after, reinstall Elive entirely. You can also replace your hard disk with a new one, where it is strongly suggested to be an SSD disk." )" "" )"
                local message_badblocks_pending_counted
                message_badblocks_pending_counted="$( printf "$( eval_gettext "Pending sectors for reallocation:" )" "" )"

                zenity --warning --text="$message_badblocks_pending $message_badblocks_pending_counted $count_sectors_pending"

                # save to not repeat
                _count_sectors_pending="$count_sectors_pending"
                el_config_save "_count_sectors_pending"
            fi
        fi
    fi


    # }}}

}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :

