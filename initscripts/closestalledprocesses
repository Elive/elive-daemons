#!/bin/sh
### BEGIN INIT INFO
# Provides:          closestalledprocesses
# Required-Start:    $local_fs $remote_fs $syslog
# Required-Stop:
# Should-Start:
# Should-Stop:
# X-Start-Before:
# X-Stop-After:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Close stalled processes
# Description:       Sometimes there's zombie processes that we don't want or that blocks other things
#                    this daemon removes them
### END INIT INFO
# Policy Info:  http://wiki.debian.org/LSBInitScripts
# also check /etc/init.d/skeleton

# Author: Thanatermesis


# Defaults
PIDDIR=/var/run/closestalledprocesses
closestalledprocessesPID=$PIDDIR/closestalledprocesses.pid
DESC="Close stalled processes"
SCRIPTNAME=/etc/init.d/closestalledprocesses


# Reads config file (will override defaults above)
[ -r /etc/default/closestalledprocesses ] && . /etc/default/closestalledprocesses

. /lib/lsb/init-functions


do_start(){
    log_daemon_msg "Starting $(basename closestalledprocesses)"

    # Make sure we have our PIDDIR, even if it's on a tmpfs
    install -o root -g root -m 755 -d $PIDDIR


    if ! start-stop-daemon --start --quiet --background --make-pidfile --pidfile $closestalledprocessesPID --oknodo --exec /usr/sbin/closestalledprocessesd
    then
        log_end_msg 1
        exit 1
    fi

    log_progress_msg "daemonized"

    true
    log_end_msg 0
}

do_stop(){
    log_daemon_msg "Stopping closestalledprocesses"
    #log_progress_msg "almost"

    start-stop-daemon --stop --quiet --pidfile $closestalledprocessesPID
    # Wait a little and remove stale PID file
    if [ -f $closestalledprocessesPID ] && ! ps h $(cat $closestalledprocessesPID) > /dev/null
    then
        # Stale PID file (closestalledprocesses was succesfully stopped),
        # remove it (should be removed by closestalledprocesses itself IMHO.)
        rm -f $closestalledprocessesPID
    fi


    log_end_msg 0
}

case "$1" in
    "")
        echo "Error: closestalledprocesses should be called with the 'start' argument." >&2
        ;;
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    restart|reload|force-reload)
        "$0" stop
        "$0" start
        ;;
    *)
        echo "Usage: closestalledprocesses [start|stop]" >&2
        exit 3
        ;;
esac


